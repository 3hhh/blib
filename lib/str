#!/bin/bash
#
#+Collection of string related functions.
#+
#+Copyright (C) 2021  David Hobach  LGPLv3
#+0.2

#+### Functions ###

#+b_str_stripQuotes [string]
#+Remove any single or double quotes around the given string.
#+[string]: string which might be enclosed in single or double quotes (' or ")
#+returns: \[string\] without the enclosed single or double quotes, if there were any; if none were found the original string is returned; the exit code is always zero
function b_str_stripQuotes {
local str="$1"
local singleQuoteEnclosed='^[[:blank:]]*'"'"'(.*)'"'"'[[:blank:]]*$'
local doubleQuoteEnclosed='^[[:blank:]]*"(.*)"[[:blank:]]*$'

if [[ "$str" =~ $singleQuoteEnclosed ]] || [[ "$str" =~ $doubleQuoteEnclosed ]] ; then
	echo "${BASH_REMATCH[1]}"
else
	echo "$str"
fi
return 0
}

#+b_str_trim [string]
#+Remove any whitespace from around a string.
#+[string]: string to trim
#+returns: \[string\] beginning and ending without whitespace; the exit code is always zero
function b_str_trim {
local str="$1"
local re='^[[:space:]]*(.*[^[:space:]]+)[[:space:]]*$'
[[ "$str" =~ $re ]] && echo "${BASH_REMATCH[1]}" || echo ""
}

#+b_str_prefixLines [string] [prefix]
#+Prefix all lines of the given string with a given prefix.
#+[string]: Each line of this string will be prefixed.
#+[prefix]: The string to put in front of each line.
#+returns: All lines of the input string, each of them prefixed with the given prefix.
function b_str_prefixLines {
local str="$1"
local prefix="$2"

local line=
while IFS= read -r line ; do
	echo "${prefix}$line"
done <<< "$str"
}
